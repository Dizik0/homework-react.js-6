{"version":3,"sources":["Components/ContactList/ContactList.module.scss","Components/AddContact/AddContact.module.scss","App.module.scss","Components/Filter/Filter.module.scss","redux/contact/contact-action.js","redux/contact/contact-opetations.js","Components/AddContact/AddContact.js","Components/Filter/Filter.js","Components/ContactList/ContactList.js","App.js","reportWebVitals.js","redux/contact/contact-reducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","axios","defaults","baseURL","AddContact","state","name","number","alerError","props","contacts","items","find","submitformContact","e","preventDefault","alert","stateTransfer","setState","addContact","currentTarget","value","this","onSubmit","htmlFor","uuidv4","className","style","transparent","formInner","onChange","type","pattern","title","required","buttom","Component","defaultProps","connect","contact","dispatch","a","id","post","data","Filter","filter","lable","actions","target","ContactList","componentDidMount","fetchContact","filterTodos","deleteTodo","list","map","listItem","button","onClick","toLowerCase","includes","delete","deleteContact","get","App","box","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","_","payload","loger","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7e23ef1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3ZtMh\",\"listItem\":\"ContactList_listItem__1rW4k\",\"button\":\"ContactList_button__iVMcK\",\"name\":\"ContactList_name__1LzHs\",\"number\":\"ContactList_number__3lMry\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transparent\":\"AddContact_transparent__2DAcw\",\"formInner\":\"AddContact_formInner__2AxyD\",\"buttom\":\"AddContact_buttom__zGJun\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"App_box__2H_X_\",\"title\":\"App_title__397R3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lable\":\"Filter_lable__2mUF2\"};","// import contactTypes from \"./contact-types\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\n// export const addContact = ({ name, number }) => ({\r\n//   type: contactTypes.ADD,\r\n//   payload: {\r\n//     name,\r\n//     number,\r\n//     id: uuidv4(),\r\n//   },\r\n// });\r\n\r\nexport const fetchContactRequest = createAction(\"fetchContactRequest\");\r\nexport const fetchContactSuccess = createAction(\"fetchContactSuccess\");\r\nexport const fetchContactError = createAction(\"fetchContactError\");\r\n\r\nexport const addContactRequest = createAction(\"addContactRequest\");\r\nexport const addContactSuccess = createAction(\"addContactSuccess\");\r\nexport const addContactError = createAction(\"addContactError\");\r\n\r\n// export const addContact = createAction(\"addContact\", ({ name, number }) => ({\r\n//   payload: {\r\n//     name,\r\n//     number,\r\n//     id: uuidv4(),\r\n//   },\r\n// }));\r\n\r\nexport const deleteContactRequest = createAction(\"deleteContactRequest\");\r\nexport const deleteContactSuccess = createAction(\"deleteContactSuccess\");\r\nexport const deleteContactError = createAction(\"deleteContactError\");\r\n\r\n// export const deleteContact = createAction(\"deleteContact\");\r\n//   (todoId) => ({\r\n//   type: contactTypes.DEL,\r\n//   payload: todoId,\r\n// });\r\n\r\nexport const filterContactRequest = createAction(\"filterContactRequest\");\r\nexport const filterContactSuccess = createAction(\"filterContactSuccess\");\r\nexport const filterContactError = createAction(\"filterContactError\");\r\n\r\nexport const filterContact = createAction(\"filterContact\");\r\n//   (value) => ({\r\n//   type: contactTypes.FIL,\r\n//   payload: value,\r\n// });\r\n","import axios from \"axios\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from \"./contact-action\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:3000\";\r\n\r\nexport const addContact =\r\n  ({ name, number }) =>\r\n  async (dispatch) => {\r\n    const contact = { name, number, id: uuidv4() };\r\n    dispatch(addContactRequest());\r\n\r\n    try {\r\n      const { data } = await axios.post(\"/contact\", contact);\r\n      dispatch(addContactSuccess(data));\r\n    } catch (error) {\r\n      dispatch(addContactError(error));\r\n    }\r\n  };\r\n\r\nexport const deleteContact = (id) => async (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  try {\r\n    await axios.delete(`/contact/${id}`);\r\n\r\n    dispatch(deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n};\r\n\r\nexport const fetchContact = () => async (dispatch) => {\r\n  dispatch(fetchContactRequest());\r\n  try {\r\n    const { data } = await axios.get(\"/contact\");\r\n    dispatch(fetchContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactError(error));\r\n  }\r\n};\r\n","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./AddContact.module.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { addContact } from \"../../redux/contact/contact-opetations\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  alerError = () => {\r\n    return this.props.contacts.items.find(({ name }) => {\r\n      return name === this.state.name;\r\n    });\r\n  };\r\n\r\n  // deleteTodo = (todoId) => {\r\n  //   this.setState((prevState) => ({\r\n  //     todos: prevState.todos.filter((todo) => todo.id !== todoId),\r\n  //   }));\r\n  // };\r\n\r\n  submitformContact = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (this.alerError()) {\r\n      alert(`${this.state.name} is alreaady in contacts`);\r\n      return;\r\n    }\r\n    this.props.stateTransfer(this.state);\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  addContact = (e) => {\r\n    const { value, name } = e.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { number, name } = this.state;\r\n    return (\r\n      <form\r\n        onSubmit={this.submitformContact}\r\n        htmlFor={this.props.uuidv4()}\r\n        className={style.transparent}\r\n      >\r\n        <div className={style.formInner}>\r\n          <label>\r\n            Name\r\n            <input\r\n              onChange={this.addContact}\r\n              type=\"text\"\r\n              value={name}\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            Number\r\n            <input\r\n              onChange={this.addContact}\r\n              type=\"tel\"\r\n              value={number}\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </label>\r\n          <button className={style.buttom} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nAddContact.propTypes = {\r\n  contacts: PropTypes.object,\r\n  uuidv4: PropTypes.func,\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n  stateTransfer: PropTypes.func,\r\n};\r\nAddContact.defaultProps = {\r\n  contacts: [],\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contact,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  stateTransfer: (value) => dispatch(addContact(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddContact);\r\n","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./Filter.module.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport * as actions from \"../../redux/contact/contact-action\";\r\n\r\nclass Filter extends Component {\r\n  state = {\r\n    filter: \"\",\r\n  };\r\n\r\n  render() {\r\n    const { filterContact, filter } = this.props;\r\n    return (\r\n      <input\r\n        className={style.lable}\r\n        type=\"text\"\r\n        onChange={filterContact}\r\n        value={filter}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nFilter.propTypes = {\r\n  filterContact: PropTypes.func,\r\n  filter: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filter: state.contact.filter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  filterContact: (e) => dispatch(actions.filterContact(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./ContactList.module.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { deleteContact } from \"../../redux/contact/contact-opetations\";\r\nimport { fetchContact } from \"../../redux/contact/contact-opetations\";\r\n\r\nclass ContactList extends Component {\r\n  componentDidMount = () => {\r\n    this.props.fetchContact();\r\n  };\r\n\r\n  render() {\r\n    const { filterTodos, deleteTodo, uuidv4 } = this.props;\r\n\r\n    return (\r\n      <ul className={style.list}>\r\n        {filterTodos.map(({ name, number, id }) => (\r\n          <li key={uuidv4()} className={style.listItem}>\r\n            <p className={style.name}>{name}</p>\r\n            <span className={style.number}>{number}</span>\r\n            <button\r\n              className={style.button}\r\n              type=\"button\"\r\n              onClick={() => deleteTodo(id)}\r\n            >\r\n              Удалить\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nContactList.propTypes = {\r\n  filterTodos: PropTypes.array,\r\n  uuidv4: PropTypes.func,\r\n  deleteTodo: PropTypes.func,\r\n};\r\n\r\n// const { filter, contacts } = this.state;\r\n\r\n// const filterTodos = contacts.filter(({ name }) =>\r\n//   name.toLowerCase().includes(filter)\r\n// );\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { filter, items } = state.contact;\r\n\r\n  const filterTodos = items.filter(({ name }) =>\r\n    name.toLowerCase().includes(filter)\r\n  );\r\n\r\n  return {\r\n    filterTodos: filterTodos,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  deleteTodo: (id) => dispatch(deleteContact(id)),\r\n  fetchContact: () => dispatch(fetchContact()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import \"./App.css\";\r\nimport { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport AddContact from \"./Components/AddContact\";\r\nimport Filter from \"./Components/Filter\";\r\nimport ContactList from \"./Components/ContactList\";\r\nimport style from \"./App.module.scss\";\r\n// import axios from \"axios\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    // contacts: [],\r\n    // name: \"\",\r\n    // number: \"\",\r\n    filter: \"\",\r\n  };\r\n\r\n  // componentDidUpdate() {\r\n  //   localStorage.setItem(\"key-1\", JSON.stringify(this.state.contacts));\r\n  // }\r\n\r\n  // componentDidMount() {\r\n  //   if (JSON.parse(localStorage.getItem(\"key-1\"))) {\r\n  //     this.setState({ contacts: JSON.parse(localStorage.getItem(\"key-1\")) });\r\n  //   }\r\n  // }\r\n\r\n  // stateTransfer = ({ name, number }) => {\r\n  //   const contact = {\r\n  //     name,\r\n  //     number,\r\n  //     id: uuidv4(),\r\n  //   };\r\n\r\n  //   this.setState((prevState) => ({\r\n  //     contacts: [contact, ...prevState.contacts],\r\n  //   }));\r\n  // };\r\n\r\n  // filterContact = (e) => {\r\n  //   this.setState({ filter: e.currentTarget.value });\r\n  // };\r\n  // deleteTodo = (todoId) => {\r\n  //   this.setState((prevState) => ({\r\n  //     contacts: prevState.contacts.filter((contact) => contact.id !== todoId),\r\n  //   }));\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <div className={style.box}>\r\n        <h1 className={style.title}>Phonebook</h1>\r\n        <AddContact\r\n          uuidv4={uuidv4}\r\n          // stateTransfer={this.stateTransfer}\r\n          // contacts={contacts}\r\n        />\r\n        <h2 className={style.title}>Contacts</h2>\r\n\r\n        <Filter\r\n          uuidv4={uuidv4}\r\n          // filterContact={this.filterContact}\r\n          // filter={filter}\r\n        />\r\n        <ContactList\r\n          // filterTodos={filterTodos}\r\n          uuidv4={uuidv4}\r\n          // deleteTodo={this.deleteTodo}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n// import contactTypes from \"./contact-types\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  filterContact,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from \"../../redux/contact/contact-action\";\r\n\r\n// const initialState = {\r\n//   contacts: {\r\n//     items: [],\r\n//     filter: \"\",\r\n//   },\r\n// };\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\n// const items = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case contactTypes.ADD:\r\n//       return [...state, payload];\r\n\r\n//     case contactTypes.DEL:\r\n//       return state.filter(({ id }) => id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nconst loger = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [filterContact]: (_, { payload }) => payload,\r\n});\r\n// (state = \"\", { type, payload }) => {\r\n//   switch (type) {\r\n//     case actions.filterContact:\r\n//       return payload;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loger,\r\n});\r\n","import contactReducer from \"./contact/contact-reducer\";\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  // persistStore,\r\n  // persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\";\r\nimport logger from \"redux-logger\";\r\n// import persistReducer from \"redux-persist/es/persistReducer\";\r\n\r\n// import { combineReducers } from \"redux\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\n// import { reduce } from \"async\";\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\n// const persistConfig = {\r\n//   key: \"root\",\r\n//   storage,\r\n//   blacklist: [\"filter\"],\r\n// };\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\n// const persistReducers = persistReducer(\r\n//   persistConfig,\r\n//   combineReducers({\r\n//     contact: contactReducer,\r\n//   })\r\n// );\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contact: contactReducer,\r\n    //  persistReducer(persistConfig)\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n\r\n// const stor = { store, persistor };\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\n// import { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {/* <PersistGate loading={null} persistor={store.persistor}> */}\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n    {/* </PersistGate> */}\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}